open build/C

.PHONY: clean stub

#
# This project requires ocamlfind (default - false).
#
USE_OCAMLFIND = true
#
OCAMLPACKS[] =
	ctypes
	ctypes.foreign
	ctypes.stubs
#
if $(not $(OCAMLFIND_EXISTS))
    eprintln(This project requires ocamlfind, but is was not found.)
    eprintln(You need to install ocamlfind and run "omake --configure".)
    exit 1

#
# Include path
#
OCAMLINCLUDES += ../src

NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = true

#
# Various options
#
OCAMLFLAGS    +=
OCAMLCFLAGS   +=
OCAMLOPTFLAGS += -warn-error -58
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

################################################
# Generated files
#
# Workaround for the fact that ocamldep does not pay attention to .mll
# and .mly files.
#
# OCamlGeneratedFiles(parser.ml lexer.ml)

# OCAML_LIBS +=
# OCAML_CLIBS +=
# OCAML_OTHER_LIBS += nums
# OCAML_LIB_FLAGS +=
#
.DEFAULT: stub

INCLUDES += $(shell ocamlfind query ctypes.stubs) $(shell ocamlfind query stdlib)

OCamlProgram(gen-type-stub, generate_types ../src/ffi_bindings)
CProgram(ffi_ml_types_stubgen, ffi_ml_types_stubgen)
ffi_ml_types_stubgen.c: gen-type-stub$(EXE)
	./gen-type-stub$(EXE) > $@

../src/ffi_generated_types.ml: ffi_ml_types_stubgen$(EXE)
	./ffi_ml_types_stubgen$(EXE) > $@

stub: ../src/ffi_generated_types.ml

clean:
	rm -f ffi_ml_type_stubgen.*
	rm -f ../src/ffi_generated_types.ml
